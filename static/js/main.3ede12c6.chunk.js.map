{"version":3,"sources":["Page/Header.js","Page/Footer.js","Page/MenuTentangKami.js","Page/MenuKontak.js","ListData/ListMakanan.js","Page/MenuMakanan.js","ListData/ListMenuUtama.js","Page/MenuUtama.js","App.js","serviceWorker.js","index.js"],"names":["Header","href","Footer","MenuTentangKami","props","state","tentang","this","React","Component","MenuKontak","alamat","kontak","ListMakanan","datalist","pict","src","alt","width","MenuMakanan","ListMenuUtama","gmb1","MenuUtama","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kNAuBeA,MArBf,WACI,OACI,6BACI,gCACI,uBAAGC,KAAK,KACJ,yCAEJ,uBAAGA,KAAK,KACJ,4CAEJ,uBAAGA,KAAK,KACJ,4CAEJ,uBAAGA,KAAK,KACJ,kDCRLC,MANf,WACI,OACI,gD,4BCgBOC,E,kDAjBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,QAAS,uIAHE,E,qDAOf,OACI,6BACI,gCACI,2CADJ,IACyBC,KAAKF,MAAMC,c,GAXtBE,IAAMC,WCsBrBC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTM,OAAQ,gEACRC,OAAQ,gBAJG,E,qDASf,OACI,6BACI,gCACI,4BAAKL,KAAKF,MAAMM,QAChB,6CAAmBJ,KAAKF,MAAMO,c,GAdzBJ,IAAMC,WCgBhBI,E,kDAfX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTS,SAAU,EAAKV,MAAMW,MAHV,E,qDAOf,OACI,6BACI,yBAAKC,IAAKT,KAAKF,MAAMS,SAAUG,IAAI,iBAAiBC,MAAM,a,GAVhDT,aC+BXU,E,uKA7BP,OACI,6BACI,gCACI,mEACA,4BACI,kBAAC,EAAD,CAAaJ,KAAK,8EAGtB,4BACI,kBAAC,EAAD,CAAaA,KAAK,wEAGtB,4BACI,kBAAC,EAAD,CAAaA,KAAK,gFAGtB,4BACI,kBAAC,EAAD,CAAaA,KAAK,6GAGtB,4BACI,kBAAC,EAAD,CAAaA,KAAK,+E,GAvBhBN,aCeXW,E,uKAZP,OACI,6BACI,4BACI,uEAEJ,gCACI,yBAAKJ,IAAKT,KAAKH,MAAMiB,KAAMJ,IAAI,oBAAoBC,MAAM,c,GARjDT,aCWba,E,uKATP,OACI,6BACI,kBAAC,EAAD,CAAeD,KAAK,6E,GAJZZ,aCoBTc,MAff,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3ede12c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <center>\r\n                <a href=\"#\">\r\n                    <span >Home |</span>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <span>Product |</span>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <span> Kontak |</span>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <span>Tentang Kami</span>\r\n                </a>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <h3>Tugas 2 ReactJS</h3>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\n\r\nclass MenuTentangKami extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tentang: \"Warung Nusantara Adalah Restoran Yang Bernuasa Makanan Nusantara, Kami ada untuk Membuat Anda Menikmati Makanan Khas Dari Nusantara\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <p>Tentang Kami</p> {this.state.tentang}\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuTentangKami;","import React, { Component } from 'react';\r\n// import MenuTentangKami from './MenuTentangKami';\r\n\r\nclass MenuKontak extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            alamat: \"Jl. Swadaya IV, Pd. Ranggon Cipayung, Jakarta Timur DKI 13860\",\r\n            kontak: '081311223344'\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <h3>{this.state.alamat}</h3>\r\n                    <h4>Kontak Kami : {this.state.kontak}</h4>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuKontak;","import React, { Component } from 'react';\r\n\r\n\r\nclass ListMakanan extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            datalist: this.props.pict\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.state.datalist} alt=\"Produk Makanan\" width=\"150\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListMakanan;","import React, { Component } from 'react';\r\nimport ListMakanan from \"../ListData/ListMakanan\";\r\n\r\nclass MenuMakanan extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <h3>Daftar Makanan Yang Kami Sediakan :</h3>\r\n                    <td>\r\n                        <ListMakanan pict=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\" />\r\n                    </td>\r\n\r\n                    <td>\r\n                        <ListMakanan pict=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\" />\r\n                    </td>\r\n\r\n                    <td>\r\n                        <ListMakanan pict=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\" />\r\n                    </td>\r\n\r\n                    <td>\r\n                        <ListMakanan pict=\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\" />\r\n                    </td>\r\n\r\n                    <td>\r\n                        <ListMakanan pict=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/food1.jpg\" />\r\n                    </td>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuMakanan;\r\n","import React, { Component } from 'react';\r\n// import MenuUtama from '../Page/MenuUtama'\r\n\r\n\r\nclass ListMenuUtama extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    <center>Selamat Datang Di Warung Nusantara</center>\r\n                </h1>\r\n                <center>\r\n                    <img src={this.props.gmb1} alt=\"Makanan Nusantara\" width=\"600\" />\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ListMenuUtama;","import React, { Component } from 'react';\r\nimport ListMenuUtama from '../ListData/ListMenuUtama'\r\n\r\n\r\nclass MenuUtama extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ListMenuUtama gmb1=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/food1.jpg\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MenuUtama;","import React from 'react';\nimport './App.css';\nimport Header from './Page/Header';\nimport Footer from './Page/Footer';\nimport MenuTentangKami from './Page/MenuTentangKami'\nimport MenuKontak from './Page/MenuKontak';\nimport MenuMakanan from './Page/MenuMakanan';\nimport MenuUtama from './Page/MenuUtama';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MenuUtama />\n      <MenuMakanan />\n      <MenuTentangKami />\n      <MenuKontak />\n      <Footer />\n    </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}